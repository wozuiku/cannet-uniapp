import {
	mapMutations,
	mapActions,
	mapState,
	mapGetters
} from 'vuex';

// #ifdef H5
var jweixin = require("jweixin-module");
// #endif
import platform from '@/utils/platform'
import wxtool from '@/common/wechat/wxtool.js'; //获取公众号code\openid
import {
	APP_ID
} from '@/env'

export default {
	data() {
		return {
			tenantId: '', //单位id
			apiToken: '', //apiToken
			userId: '', //用户id

			showSelect: false,
			tenantList: [],
			selectResult: '',

			balanceList: [], //余额账户列表
			balanceCount: 0, //余额账户个数
			balanceCurrent: 0, //当前游标
			showLeftArrow: false, //显示左边箭头
			showRightArrow: false, //显示右边箭头
			showLine: false, //显示中间间隔直线


			balanceListAll: [{
				account_address: 'A栋608',
				balance_amount_integer: '￥68.',
				balance_amount_decimal: '28',
				month_amount_integer: '￥168.',
				month_amount_decimal: '08'
			}, ],

			cuIconList: [{
				cuIcon: 'cardboardfill',
				color: 'red',
				badge: 120,
				name: '去交费'
			}, {
				cuIcon: 'recordfill',
				color: 'orange',
				badge: 1,
				name: '查电费'
			}, {
				cuIcon: 'picfill',
				color: 'yellow',
				badge: 0,
				name: '图像'
			}, {
				cuIcon: 'noticefill',
				color: 'olive',
				badge: 22,
				name: '通知'
			}, {
				cuIcon: 'upstagefill',
				color: 'cyan',
				badge: 0,
				name: '排行榜'
			}, {
				cuIcon: 'clothesfill',
				color: 'blue',
				badge: 0,
				name: '皮肤'
			}, {
				cuIcon: 'discoverfill',
				color: 'purple',
				badge: 0,
				name: '发现'
			}, {
				cuIcon: 'questionfill',
				color: 'mauve',
				badge: 0,
				name: '帮助'
			}, {
				cuIcon: 'commandfill',
				color: 'purple',
				badge: 0,
				name: '问答'
			}, {
				cuIcon: 'brandfill',
				color: 'mauve',
				badge: 0,
				name: '版权'
			}],


			noticeList: [{
					id: 0,
					image: 'https://cdn.uviewui.com/uview/swiper/1.jpg',
					title: '昨夜星辰昨夜风，画楼西畔桂堂东'
				},
				{
					id: 1,
					image: 'https://cdn.uviewui.com/uview/swiper/2.jpg',
					title: '身无彩凤双飞翼，心有灵犀一点通'
				},
				{
					id: 2,
					image: 'https://cdn.uviewui.com/uview/swiper/3.jpg',
					title: '谁念西风独自凉，萧萧黄叶闭疏窗，沉思往事立残阳'
				}
			],

			adList: [{
					id: 0,
					image: 'https://cdn.uviewui.com/uview/swiper/1.jpg',
					title: '昨夜星辰昨夜风，画楼西畔桂堂东'
				},
				{
					id: 1,
					image: 'https://cdn.uviewui.com/uview/swiper/2.jpg',
					title: '身无彩凤双飞翼，心有灵犀一点通'
				},
				{
					id: 2,
					image: 'https://cdn.uviewui.com/uview/swiper/3.jpg',
					title: '谁念西风独自凉，萧萧黄叶闭疏窗，沉思往事立残阳'
				}
			],

			modalName: null,
			gridCol: 4,
			gridBorder: false,
			menuBorder: false,
			menuArrow: false,
			menuCard: false,
			skin: false,
			listTouchStart: 0,
			listTouchDirection: null,

			dropdownItemValue: 1,
			dropdownItemOptions: [{
					label: '红星美凯龙',
					value: 1,
				},
				{
					label: '科能',
					value: 2,
				},

			],

		};
	},

	computed: {
		...mapGetters(['isLogin']),
	},

	onLoad() {
		this.initOpenid();
		this.init()
	},

	watch: {
		balanceCurrent(val) {
			console.log('watch balanceCurrent val:', val);
			if (this.balanceCurrent > 0) {
				this.showLeftArrow = true
			} else {
				this.showLeftArrow = false
			}

			if (this.balanceCurrent + 2 < this.balanceCount) {
				this.showRightArrow = true
			} else {
				this.showRightArrow = false
			}
		},
	},

	methods: {
		init() {
			let userInfo = uni.getStorageSync('userInfo');
			this.userId = userInfo.id
			console.log('init userId:', this.userId);
			//初始化左上角单位列表
			this.initTenantList()
		},


		initTenantList() {
			this.$http(
				'user.tenant', {
					AccountId: this.userId,
				}, '加载中...'
			).then(res => {
				if (res.code === 200) {
					this.tenantList = res.data
					this.tenantList.forEach((item, index) => {
						this.tenantList[index] = {
							...item,
							...{
								value: item.id,
								label: item.extraName
							}
						}
					})
					//获取初始化的apiToken
					this.initApiToken()
				}
			});
		},


		initApiToken() {
			
			// this.tenantId = uni.getStorageSync('tenantId')
			// console.log('getStorageSync tenantId:', this.tenantId);
			
			var that=this;
			//单位id默认取第一个
			this.tenantId = this.tenantList[0].id
			this.selectResult = this.tenantList[0].extraName
			
			// uni.setStorageSync('tenantId', this.tenantId)
			// uni.setStorageSync('tenantName', this.selectResult)
			this.$commom.setLocalParam("tengantid",this.tenantId);//缓存单位id,后面可能用到
			let header = {
				__tenant: this.tenantId,
				'content-type': 'application/x-www-form-urlencoded',
			}

			let param = {
				client_id: 'zzkn',
				client_secret: 'zzkn1*2!3~',
				grant_type: 'password',
				username: 'appAdmin',
				password: 'Zzkn123*!',
				refresh_token: '',
			}

			this.$http(
				'common.apiToken', param, '加载中...', '', header
			).then(res => {
				this.apiToken = res.token_type + ' ' + res.access_token
				console.log('apiToken:', this.apiToken);
				uni.setStorageSync("apiToken", this.apiToken)
				this.$commom.getCustomTableList({"tenantId":that.tenantId});//获取自定义字段段
				this.getBalanceList()
			});
		},


		updateApiToken() {
			let header = {
				__tenant: this.tenantId,
				'content-type': 'application/x-www-form-urlencoded',
			}
			var that=this;
			let param = {
				client_id: 'zzkn',
				client_secret: 'zzkn1*2!3~',
				grant_type: 'password',
				username: 'appAdmin',
				password: 'Zzkn123*!',
				refresh_token: '',
			}

			this.$http(
				'common.apiToken', param, '加载中...', '', header
			).then(res => {
				this.apiToken = res.token_type + ' ' + res.access_token
				console.log('apiToken:', this.apiToken);
				uni.setStorageSync("apiToken", this.apiToken)
				this.$commom.getCustomTableList({"tenantId":that.tenantId});//获取自定义字段段
				this.getBalanceList()
			});
		},


		getBalanceList() {
			this.$http(
				'charge.balance', {
					AccountId: this.userId,
				}, '加载中...'
			).then(res => {
				//console.log(res)
				console.log('http getBalanceList res:', res);
				if (res.code === 200) {
					//console.log('init res.data:', res.data);
					this.balanceListAll = res.data

					this.balanceListAll.forEach((item, index) => {

						let balance = item.accountBalance.toString();
						let balanceInteger = Math.floor(balance)
						let balanceDecimal = balance.substring(balance.indexOf(".") + 1, balance
							.indexOf(".") + 3);

						let unpaid = item.unpaidMoney.toString();
						let unpaidInteger = Math.floor(unpaid)
						let unpaidDecimal = unpaid.substring(unpaid.indexOf(".") + 1, unpaid.indexOf(
							".") + 3);
						console.log('inti balanceList unpaid:', unpaid);
						console.log('inti balanceList unpaidInteger:', unpaidInteger);
						console.log('inti balanceList unpaidDecimal:', unpaidDecimal);

						this.balanceListAll[index] = {
							...item,
							...{
								accountBalanceInteger: balanceInteger,
								accountBalanceDecimal: balanceDecimal,
								accountUnpaidInteger: unpaidInteger,
								accountUnpaidDecimal: unpaidDecimal,
							}
						}
						console.log('inti balanceListAll item:', item);
					})
					console.log('+++++++++init balanceListAll:', this.balanceListAll);
					console.log('init balanceList:', this.balanceList);

					this.balanceCount = this.balanceListAll.length
					this.balanceCurrent = 0
					this.balanceList = this.balanceListAll.slice(this.balanceCurrent, this.balanceCurrent + 2)


					if (this.balanceCount > 2) {
						this.showRightArrow = true
					} else {
						this.showRightArrow = false
					}

					if (this.balanceCount > 1) {
						this.showLine = true
					} else {
						this.showLine = false
					}
				}
			});

		},

		showTenant() {
			this.showSelect = true
		},

		confirmSelect(selectItem) {
			this.tenantId = selectItem[0].value
			this.selectResult = selectItem[0].label
			console.log('当前房间tenantId:', this.tenantId);
			this.$commom.setLocalParam("tengantid",this.tenantId);//缓存单位id,后面可能用到
			this.updateApiToken();
			
		},

		cancelSelect() {

		},

		bindUser() {
			uni.navigateTo({
				url: '/pages/user/bind/index/index'
			})
		},

		left_arrow() {
			console.log('left_arrow');
			this.balanceCurrent = this.balanceCurrent - 1
			this.balanceList = this.balanceListAll.slice(this.balanceCurrent, this.balanceCurrent + 2)
		},

		right_arrow() {
			console.log('right_arrow');
			console.log('right_arrow balanceListAll：', this.balanceListAll);
			this.balanceCurrent = this.balanceCurrent + 1
			this.balanceList = this.balanceListAll.slice(this.balanceCurrent, this.balanceCurrent + 2)
		},

		jump(item) {
			console.log('jump item:', item);
			uni.navigateTo({
				url: '/pages/charge/balance/index/index?item=' + encodeURIComponent(JSON.stringify(item))
			});
		},

		to_charge(item) {//去充值页面
			// uni.navigateTo({
			// 	url: '/pages/charge/pay/index/index'
			// });
			uni.navigateTo({
				url: '/pages/charge/pay/topay?item=' + encodeURIComponent(JSON.stringify(item)),
			});
		},


		scanCode() {
			console.log('######scanCode begin######');
			console.log('######111111######');
			let that = this
			let platform = that.$platform.get();

			if (this.isLogin) {

				//如果是H5，则调用微信扫码

				// #ifdef H5
				if (platform === 'H5') {
					this.$u.toast('普通浏览器不支持扫码功能，请使用小程序或微信内浏览器');
				} else {
					console.log('else');
					// this.$wxsdk.scanQRCode(res => {
					// 	//this.scanCodes = res.resultStr.split(',');
					// 	console.log('scanCode res:', res);

					// });
					jweixin.scanQRCode({
						needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
						scanType: ["qrCode", "barCode"], // 可以指定扫二维码还是一维码，默认二者都有
						success: function(res) {
							callback(res);
						},
						fail: function(err) {
							console.log('fail err:', err);
						},
					});
				}
				// #endif



				//如果不是H5，则调用uni.scanCode扫码，uni.scanCode不支持H5
				// #ifndef  H5
				//理解为房间的id
				let qrCode = ''
				let userInfo = uni.getStorageSync('userInfo');

				uni.scanCode({
					success: function(res) {
						console.log('条码类型：' + res.scanType);
						console.log('条码内容：' + res.result);
						qrCode = res.result
						that.$http(
							'user.roomInfo', {
								QRCode: qrCode,
								AccountId: userInfo.id,
							},
							'获取中...'
						).then(res => {
							console.log('index scanCode res:', res);
							if (res.code === 200) {
								let isBind = res.data.isBind
								let isExistMain = res.data.isExistMain
								let roomId = res.data.roomInfo.id
								let roomName = res.data.roomInfo.roomName
								console.log('index scanCode isBind:', isBind);

								if (isBind) {
									that.$u.toast('该房间您已经绑定过了')
								} else {

									let params = '?accountId=' + userInfo.id + '&roomId=' + roomId +
										'&roomName=' + roomName + '&isBind=' + isBind +
										'&isExistMain=' + isExistMain
									console.log('index scanCode params:', params);
									uni.navigateTo({
										url: 'pages/user/bind/index' + params
									});
								}
							} else {
								this.$u.toast(res.message)
							}

						});

					}
				});

				// #endif

			} else {
				console.log('else');
				this.$store.dispatch('showAuthModal')
			}

			console.log('######scanCode end######');

		},
		initOpenid() {
			var _this = this;
			var userinfo = _this.$commom.getLocalParam("userInfo");
			console.log("1=======================================================",userinfo);
			//#ifdef H5
			console.log("=======================================================");
			if (wxtool.isWechat()) { //判断是否在微信端
				let openid = _this.$commom.getLocalParam("openid")
				if (openid == "" || openid == null) { //如果openid才去获取
					let code = wxtool.getUrlCode("code"); //微信回调后再跳转带code参数返回主页
					if (code) {
						console.log("Code=", code);
						wxtool.getOpenid({
							"code": code,
							"appid": APP_ID
						}, function(data) {
							console.log("获取到OPENID", data);
							_this.$commom.setLocalParam("openid", data.data);
							wxtool.bindOpenidAndUserId({
								"userid": userinfo.id
							});
						})
					} else {
						wxtool.wxAuthorize(APP_ID, function(code) {
							wxtool.getOpenid({
								"code": code,
								"appid": APP_ID
							}, function(data) {
								console.log("获取到OPENID", data);
								_this.$commom.setLocalParam("openid", data.data);
								wxtool.bindOpenidAndUserId({
									"userid": userinfo.data.id
								});
							})

						})
					}
				} else {
					console.log("已经存在OPENID", openid);
				}
			}
			//#endif

		}

	}
}
